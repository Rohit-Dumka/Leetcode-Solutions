//------------------------------1----------------------------------------
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        unordered_map<int,int>m;
        int n=nums.size();

        for(int i=0;i<nums.size();i++)
        {
            m[nums[i]]++;
        }
        for(auto x:m)
        {
            if(x.second>n/2)
                return x.first;
        }
        return 0;
    }
};

//----------------------------2--------------------------------------

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        unordered_map<int,int>m;

        for(int i=0;i<nums.size();i++)
            m[nums[i]]++;

        priority_queue<pair<int,int>>maxh;

        for(auto i=m.begin();i!=m.end();i++)
            maxh.push({i->second,i->first});

        return maxh.top().second;
    }
};
