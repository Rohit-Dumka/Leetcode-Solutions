//------------------------------------method 1----------------------------------------

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* removeElements(struct ListNode* head, int val){
    struct ListNode *curr=head;
    if(head==NULL)
        return NULL;
  
    while(head && head->val==val)
        head=head->next;

    while(curr && curr->next)
        {
            if(curr->next->val==val)
                curr->next=curr->next->next;
            else
                curr=curr->next;
        }
    return head;
}


//-----------------------------------method 2------------------------------------------

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* removeElements(struct ListNode* head, int val){
        if(head==NULL)
            return head;
        while(head && head->val==val)
            head=head->next;
        struct ListNode *curr=head, *prev=NULL;

        while(curr!=NULL)
        {
            if(curr->val==val)
                prev->next=curr->next;
            else
                prev=curr;

            curr=curr->next;
        }

        return head;
}
