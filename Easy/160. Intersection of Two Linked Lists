//--------------------------------------------------------------1-------------------------------------------------
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int len(ListNode *head)
    {
        int l=0;
        while(head)
        {
            l++;
            head=head->next;
        }
        return l;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int la=len(headA);
        int lb=len(headB);

        int nodestoskip=abs(la-lb);

        if(la>lb)
            while(nodestoskip--)
                headA=headA->next;
        else
            while(nodestoskip--)
                headB=headB->next;
        
        while(headA!=headB)
        {
            headA=headA->next;
            headB=headB->next;
        }

        return headA;
    }
};



//-----------------------------------------------2-----------------------------------------------------

class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA==NULL || headB==NULL) return NULL;

        ListNode *a=headA;
        ListNode *b=headB;

        while(a!=b)
        {
            a=a==NULL? headB: a->next;
            b=b==NULL? headA: b->next;
        }

        return a;
    }
};
