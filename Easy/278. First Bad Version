// The API isBadVersion is defined for you.
// bool isBadVersion(int version);
//well the question is to find first bad version
//means the position before first true /position of last false
//the last false who turns out odd from them and converted to true
class Solution {
public:
    int firstBadVersion(int n) {
        long int s=0,e=n,ans=0;
        while(s<=e)
        {
            int mid=s+(e-s)/2;
            //if found true, go left 1 step coz the last bad may be there
            //again we do the same,till we found the first bad /the last false
            if(isBadVersion(mid))
            {
                ans=mid;
                e=mid-1;
            }
            else
                s=mid+1;
        }
        return ans;
    }
};
