//method 1--

class Solution {
    public boolean isPalindrome(String s) {
        s=s.replaceAll("\\s","");
        String s2="";

        for(int i=0;i<s.length();i++)
        {
            char c=s.charAt(i);
            if(Character.isAlphabetic(c) || Character.isDigit(c))
            {
                if(Character.isUpperCase(c))
                    c=Character.toLowerCase(c);
                s2+=c;
            }
        }
        StringBuilder s3=new StringBuilder(s2);
        s3.reverse();

        return s2.equals(s3.toString());
    }
}


//method 2--

class Solution {
    public boolean isPalindrome(String s) {
        s=s.replaceAll("\\s","");
        String s2="";

        for(int i=0;i<s.length();i++)
        {
            char c=s.charAt(i);
            if(Character.isAlphabetic(c) || Character.isDigit(c))
                s2+=c;
        }
        StringBuilder s3=new StringBuilder(s2);
        s3.reverse();

        return s2.equalsIgnoreCase(s3.toString());
    }
}


//mehtod 3--

class Solution {
    public boolean isPalindrome(String s) {
        s=s.replaceAll("\\s","");
        String s2="";

        for(int i=0;i<s.length();i++)
        {
            char c=s.charAt(i);
            if(Character.isAlphabetic(c) || Character.isDigit(c))
            {
                if(Character.isLowerCase(c))
                    c=Character.toUpperCase(c);
                s2+=c;
            }
        }
        int begin=0;
        int end=s2.length()-1;
        
        while(begin<end)
        {
            if(s2.charAt(begin)!=s2.charAt(end))
                return false;
            begin++;
            end--;
        }
        return true;
    }
}
