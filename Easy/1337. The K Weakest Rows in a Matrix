class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        priority_queue<pair<int,int>>maxh;
        int count=0;

        for(int i=0;i<mat.size();i++)
        {
            for(int j=0;j<mat[0].size();j++)
            {
                if(mat[i][j]==1)
                    count++;
            }
            maxh.push({count,i});

            if(maxh.size()>k)
                maxh.pop();
            count=0;
        }

        vector<int>ans;
        while(maxh.size()>0)
        {
            ans.push_back(maxh.top().second);
            maxh.pop();
        }
        reverse(ans.begin(),ans.end());
        
        return ans;
    }
};
