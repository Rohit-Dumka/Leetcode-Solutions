class Solution {
public:
    int countPoints(string rings) {
        unordered_map<int, unordered_set<char>>m;
        int ans=0;
        for(int i=1;i<rings.size();i+=2)
        {
           m[rings[i]-'0'].insert(rings[i-1]);
        }
        for(int i=0;i<10;i++)
        {
            if(m.find(i)!=m.end())
                if(m.at(i).size()==3)
                    ans++;
        }
        return ans;
    }
};

//2nd 

class Solution {
public:
    int countPoints(string rings) {
        int rc[10]={0};
        int gc[10]={0};
        int bc[10]={0};

        int ans=0;
        for(int i=0;i<rings.size();i+=2)
        {
            char color=rings[i];
            int index=rings[i+1]-'0';

            if(color=='R')
                rc[index]++;
            else if(color=='G')
                gc[index]++;
            else if(color=='B')
                bc[index]++;
        }

        for(int i=0;i<10;i++)
        {
            if(rc[i]>0 && gc[i]>0 && bc[i]>0)
                ans++;
        }
        return ans;
    }
};

