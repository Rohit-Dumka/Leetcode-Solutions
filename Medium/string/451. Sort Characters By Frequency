        priority_queue<pair<int,char>>maxh;
        unordered_map<char,int>m;

        for(int i=0;i<s.length();i++)
        {
            m[s[i]]++;
        }

        for(auto i=m.begin();i!=m.end();i++)
        {
            maxh.push({i->second,i->first});
        }
        string ans;
        while(maxh.size()>0)
        {
            int freq=maxh.top().first;
            char c=maxh.top().second;
            maxh.pop();

            for(int i=1;i<=freq;i++)
                ans+=c;
        }
        return ans;

//------------------------------------
//----------------same----------------
//------------------------------------

class Solution {
public:
    string frequencySort(string s) {
       unordered_map<char,int>m;
       priority_queue<pair<int,char>>maxh;
       for(int i=0;i<s.size();i++){
           m[s[i]]++;
       } 
       for(auto i:m){
           maxh.push({i.second,i.first});
       }
       string ans="";
       while(!maxh.empty()){
            int freq=maxh.top().first;
            char c=maxh.top().second;
            maxh.pop();
           for(int i=0;i<freq;i++)
                ans+=c;
       }
       return ans;
    }
};
