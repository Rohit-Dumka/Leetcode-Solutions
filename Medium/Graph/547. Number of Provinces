class Solution {
public:
    void dfs(int curr,vector<int>adj[], int vis[]){
        vis[curr]=1;

        for(auto it: adj[curr]){
            if(!vis[it])
                dfs(it,adj,vis);
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n=isConnected.size();
        vector<int>adj[n];

        //to change the adj matrix to list
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConnected[i][j]==1 && i!=j){
                    adj[i].push_back(j);
                    adj[j].push_back(i);
                }
            }
        }
        int vis[n];
        for(int i=0;i<n;i++)
            vis[i]=0;

        int count=0;
        for(int i=0;i<n;i++){
            if(!vis[i]){
                count++;
                dfs(i,adj,vis);
            }
        }

        return count;
    }
};
