class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>ans;
        for(int i=0;i<nums.size();i++)
            {
            if(nums[i]==target)
                {
                ans.push_back(i);
                break;
                }
            }

        for(int i=nums.size()-1;i>=0;i--)
            {
            if(nums[i]==target)
                {
                ans.push_back(i);
                return ans;
                }
            }
        ans.push_back(-1);
        ans.push_back(-1);
        return ans;
    }
};

//-----------------------------------BS-----------------------------------

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>ans;
        
        int s=0,e=nums.size()-1;
        int first=-1,last=-1;

        while(s<=e)
        {
            int mid=s+(e-s)/2;
            if(nums[mid]==target)
            {
                first=mid;
                e=mid-1;
            }
            else if(nums[mid]>target)
                e=mid-1;
            else
                s=mid+1;
        }
        
        s=0,e=nums.size()-1;

        while(s<=e)
        {
            int mid=s+(e-s)/2;
            if(nums[mid]==target)
            {
                last=mid;
                s=mid+1;
            }
            else if(nums[mid]>target)
                e=mid-1;
            else
                s=mid+1;
        }
        ans.push_back(first);
        ans.push_back(last);

        return ans;
    }
};
